/**
 * Created by Baird on 3/28/2020.
 */
@isTest
private class EACCLightningTEST {

    static testMethod void Test1()
    {
        Create_Test_Variables ctv = new Create_Test_Variables();

        EACCLightning eacc = new EACCLightning();
        eacc.setEnterContrib();

        // Tests Leads

        eacc.personId = ctv.TestLead.Id;

        eacc.selectPerson();

        System.currentPageReference().getParameters().put('l', eacc.personId);

        eacc.setEnterContrib();

        eacc.updatePerson();
        eacc.savePerson();

        eacc.enterContribution();

        System.currentPageReference().getParameters().remove('l');

        eacc.l = null;

        // Test Accounts

        eacc.a = '2';
        eacc.step = '2';
        eacc.setEnterContrib();

        eacc.acct.RecordTypeId  = Schema.SObjectType.Account.getRecordTypeInfosByName().get('Family').getRecordTypeId();

        eacc.acct.Name = 'Test';
        eacc.ContactsInAccount = '2';

        eacc.addContact();

        eacc.a2 = '1';

        eacc.setContacts();

        // Test Contacts

        eacc.co.FirstName = 'Test';
        eacc.co.LastName = 'Test';
        eacc.co.Email = 'test@watergrass.org';

        eacc.co2.FirstName = 'Test';
        eacc.co2.LastName = 'Test';

        eacc.saveAccountContacts();

        eacc.acct.Id = null;
        eacc.acct.Name = null;
        eacc.ContactsInAccount = '1';

        eacc.co.Id = null;

        eacc.saveAccountContacts();

        eacc.a = '1';

        eacc.personId = eacc.co.Id;
        eacc.selectPerson();

        System.currentPageReference().getParameters().put('co', eacc.personId);

        eacc.setEnterContrib();
        eacc.a = '3';
        eacc.savePerson();

        eacc.selectAccount();
        eacc.selectContact();

        eacc.enterContribution();

        System.currentPageReference().getParameters().remove('co');

        System.currentPageReference().getParameters().put('pc', eacc.co.Id);
        System.currentPageReference().getParameters().put('ac', eacc.co.AccountId);

        eacc.setEnterContrib();

        System.currentPageReference().getParameters().put('rt', [ SELECT Id FROM RecordType WHERE Name = 'Pledge' ].Id);

        eacc.setEnterContrib();
        eacc.o.CampaignId = ctv.TestCampaign.Id;
        eacc.oc.thankYouLetter = eacc.oc.thankYouLetters[1].getValue();

        eacc.CompMembership.Membership_Start_Date__c = Date.today();
        eacc.CompMembership.Membership_End_Date__c = Date.today().addYears(1);

        eacc.submitContribution();
/*
        eacc.sendEmail();
        eacc.attachLetter();
        eacc.next();
        eacc.exit();
*/
        eacc.co = null;

        eacc.personId = ctv.TestAccount.Id;
        eacc.selectPerson();

        eacc.setEnterContrib();

        System.currentPageReference().getParameters().remove('ac');

        eacc.acct = null;
    }


    static testMethod void PrimaryContributorNotInAccount()
    {
        Create_Test_Variables ctv = new Create_Test_Variables();
        Account TestAccount = ctv.fetchTestAccount();
        Account DiffAccount = new Account(
                name='DifferentAccount',
                recordTypeId = Schema.SObjectType.Account.getRecordTypeInfosByName().get('Family').getRecordTypeId()
        );
        insert DiffAccount;
        Contact DiffContact = new Contact(
                firstname = 'Diff',
                Lastname = 'Contact',
                email = 'diffcontact@dontbotherme.org',
                accountId = DiffAccount.Id
        );
        insert DiffContact;
        EACCLightning eacc = new EACCLightning();
        eacc.setEnterContrib();

        // Find TestAccount for account
        // AutoCompleteV2 finds the TestAccount
        eacc.personId = TestAccount.Id;
        // AutoCompleteV2 calls selectPerson()
        eacc.selectPerson();
        // selectPerson calls Redirect();
        system.debug('URL generated by Redirect() after choosing account is ' + eacc.pr.getUrl());
        system.assert(eacc.pr.getUrl().CONTAINS(string.ValueOf(TestAccount.Id)),'Redirect should have produced URL with ac=TestAccount.Id, instead produced ' + eacc.pr + ' while TestAccount.Id is ' + TestAccount.Id);
        // add parameters that EACC would have pulled from the URL
        System.currentPageReference().getParameters().put('a', '1');
        System.currentPageReference().getParameters().put('a2', '1');
        System.currentPageReference().getParameters().put('step', '2');
        System.currentPageReference().getParameters().put('ac', TestAccount.Id);
        // setEnterContrib is invoked by the page
        eacc = new EACCLightning();
        system.assertEquals('2',eacc.step,'Eacc.step should have been set to 2 by redirect and instead is ' + eacc.step);
        // AutoCompleteV2 inserts the contact, which comes from a different account
        eacc.setEnterContrib();
        eacc.personId = DiffContact.Id;
        eacc.selectPrimaryContributor();
        system.debug('URL generated by Redirect() after choosing contact is ' + eacc.pr.getUrl());
        system.assert(eacc.pr.getUrl().CONTAINS(string.ValueOf(DiffContact.Id)),'Redirect should have produced URL with co=DiffContact.Id, instead produced ' + eacc.pr + ' while DiffContact.Id is ' + DiffContact.Id);
        eacc.enterContribution();
    }

    testmethod static void TestEnteringContacts(){
        Create_Test_Variables ctv = new Create_Test_Variables();
        Account TestAcct = ctv.fetchTestAccount();
        Pagereference Testpage = Page.EACCLightningPage;
        Test.setCurrentPage(Testpage);
        System.currentPageReference().getParameters().put('2', 'a2');
        EACCLightning eacc = new EACCLightning();
        System.currentPageReference().getParameters().put('ac', TestAcct.Id);

        eacc.a = '2';
        eacc.step = '2';
        eacc.setEnterContrib();
        system.debug('After first setEnterContrib(), acct.id is ' + eacc.acct.id);

        eacc.acct.RecordTypeId  = Schema.SObjectType.Account.getRecordTypeInfosByName().get('Family').getRecordTypeId();

        eacc.acct.Name = 'Test';
        eacc.ContactsInAccount = '2';
        update eacc.acct;

        eacc.addContact();
        eacc.a2 = '2';
        system.debug('After accContact, acct.id is ' + eacc.acct.id + ' and ContactsInAccount is ' + eacc.ContactsInAccount);
        eacc.setEnterContrib();
        system.debug('After second setEnterContrib, acct.id is ' + eacc.acct.id + ' and ContactsInAccount is ' + eacc.ContactsInAccount);
        eacc.setContacts();
        system.debug('After setcontacts, acct.id is ' + eacc.acct.id + ' and ContactsInAccount is ' + eacc.ContactsInAccount);
    }

    testmethod static void TestEnteringAccountAndContacts(){
        Create_Test_Variables ctv = new Create_Test_Variables();
        Account TestAcct = ctv.fetchTestAccount();
        TestAcct.BillingPostalCode = '22222';
        Pagereference Testpage = Page.EACCLightningPage;
        Test.setCurrentPage(Testpage);
        EACCLightning eacc = new EACCLightning();
        System.currentPageReference().getParameters().put('a', '2');
        eacc.setEnterContrib();
        // Test dummy contact
        eacc.ContactsInAccount = '0';
        eacc.CreateDummyContact = true;
        eacc.setContacts();
        system.assertEquals('Unknown',eacc.co.LastName,'Set CreateDummyContact, lastname should be Unknown instead of ' + eacc.co.LastName);
        // Get rid of dummy contact
        eacc.co.clear();
        eacc.CreateDummyContact = false;

        // Test insert of two contacts;
        eacc.ContactsInAccount = '2';
        eacc.setContacts();

        // Test Contacts

        eacc.co.FirstName = 'Test';
        eacc.co.LastName = 'Test';
        eacc.co.Email = 'test@watergrass.org';

        eacc.co2.FirstName = 'Testa';
        eacc.co2.LastName = 'Test';
        eacc.saveAccountContacts();

        Account ConfirmAcct = [select id, name, (select firstname, lastname from Contacts) from Account
        where name = 'Test, Test and Testa Household'];
        system.debug('ConfirmAcct.name is ' + ConfirmAcct.name);
        system.assertEquals(2,ConfirmAcct.Contacts.size(),'Should have saved a new acct with two contacts');
        system.assertEquals('Test',ConfirmAcct.Contacts[0].FirstName);

        eacc.acct.Id = null;
        eacc.acct.Name = null;
        eacc.ContactsInAccount = '1';

        eacc.co.Id = null;

        eacc.saveAccountContacts();

        eacc.a = '1';

        eacc.personId = eacc.co.Id;
        eacc.selectPerson();

        System.currentPageReference().getParameters().put('co', eacc.personId);

        eacc.setEnterContrib();
        eacc.a = '3';
        eacc.savePerson();

        eacc.selectAccount();
        eacc.selectContact();

        eacc.enterContribution();

        System.currentPageReference().getParameters().remove('co');

        System.currentPageReference().getParameters().put('pc', eacc.co.Id);
        System.currentPageReference().getParameters().put('ac', eacc.co.AccountId);

        eacc.setEnterContrib();

        System.currentPageReference().getParameters().put('rt', [ SELECT Id FROM RecordType WHERE Name = 'Pledge' ].Id);

        eacc.setEnterContrib();
        eacc.o.CampaignId = ctv.TestCampaign.Id;
        eacc.oc.thankYouLetter = eacc.oc.thankYouLetters[1].getValue();

        eacc.CompMembership.Membership_Start_Date__c = Date.today();
        eacc.CompMembership.Membership_End_Date__c = Date.today().addYears(1);

        eacc.submitContribution();


        eacc.PrimaryContributor = [SELECT Firstname, Lastname, Email from Contact where Email = 'test@watergrass.org' LIMIT 1];
        eacc.sendEmail();
        eacc.attachLetter();
        eacc.next();
        eacc.exit();

        eacc.co = null;

        eacc.personId = ctv.TestAccount.Id;
        eacc.selectPerson();

        eacc.setEnterContrib();

        System.currentPageReference().getParameters().remove('ac');

        eacc.acct = null;

        list<selectOption> ConfirmSO = eacc.getNrContacts();
        system.assertEquals(3,ConfirmSO.size(),'getNrContacts should have returned 0,1,2 as options for the nr of contacts to add');

        eacc.step2();
    }
}